name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'

env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: ${{vars.MONGO_USERNAME}}
  MONGO_PASSWORD: ${{secrets.MONGO_PASSWORD}}
    
jobs:
    unit-testing:
        name: Unit Testing
        # strategy:
        #   matrix:
        #     nodejs_version: [18, 19, 20]
        #     operating_system: [ubuntu-latest, macos-latest]
        #     exclude:
        #       - nodejs_version: 18
        #         operating_system: macos-latest
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v4
          with:
            node-version: 20
        
        - name: Cache NPM dependencies
          uses: actions/cache@v4
          with:
            path: node_modules
            key: ${{ runner.os }}-node-modules-${{hashFiles('package-lock.json')}}
            
        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          id: nodejs-unit-testing-step
          run: npm test
          
        - name: Archive Test Result
        ## Garantizas que este step siempre corra falle o no el step anterior y asi ver el reporte
          if: always()
          uses: actions/upload-artifact@v4
          with:
            name: Test-Result-Report
            path: test-results.xml

    code-coverage:
        name: Code coverage
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v4
          with:
            node-version: 20           
        - name: Cache NPM dependencies
          uses: actions/cache@v4
          with:
            path: node_modules
            key: ${{ runner.os }}-node-modules-${{hashFiles('package-lock.json')}} #crea un hash unico para el fichero si el fichero no cambia el hash es el mismo            
        - name: Install Dependencies
          run: npm install
    
        - name: Check code coverage
          continue-on-error: true
          run: npm run coverage
          
        - name: Archive Test Result
          uses: actions/upload-artifact@v4
          with:
            name: Code-Coverage_Result
            path: coverage
            retention-days: 5

    docker:
      needs: [unit-testing, code-coverage]
      name: Containerization
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Repo
          uses: actions/checkout@v4
        
        - name: Docker hub login
          uses: docker/login-action@v3
          with:
            username: ${{ vars.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
                
        - name: Docker Build for testing
          uses: docker/build-push-action@v6
          with:
            context: .
            push: false
            tags: ${{ vars.DOCKERHUB_USERNAME }}/nana_python:${{github.sha}}

        - name: Docker Image Test
          run: |
            docker images
            docker run -d --name solar-system-app \
              -p 3000:3000 \
              -e MONGO_URI=$MONGO_URI \
              -e MONGO_USERNAME=$MONGO_USERNAME \
              -e MONGO_PASSWORD=$MONGO_PASSWORD \
              ${{ vars.DOCKERHUB_USERNAME }}/nana_python:${{github.sha}}
            
            export IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
            echo $IP

            echo Testing Image URL using wget
            wget -q -o - 127.0.0.1:3000/live | grep live
